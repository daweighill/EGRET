# Libraries and tags
Sys.setenv(RSTUDIO_PANDOC="/usr/lib/rstudio-server/bin/pandoc")

# load the libraries we will need.
library(GenomicRanges)
library(IRanges)
library(tidyr)
library(data.table)
library(dplyr)
library(pandaR)

# this tag should indicate the genotype and the date
args = commandArgs(trailingOnly=TRUE)
tag <- paste0("finalEgret_v1_banovich_iPSC-CM_06242020_",args[1])

# Individual inputs:
qbic <- read.table(file = "../inputs/qbic_banovich_iPSC-CM.txt", header = FALSE)
genotype_col <- as.numeric(args[1]) + 9
vcf <- fread("../data/genotypes/genotypesYRI.gen.txt", select = c(c(1:9),genotype_col))

# Population  inputs:
motif <- load("../../final_egret_v1/inputs/panda_motif_prior_finalEGRET_v1.RData")
expr <- load("../inputs/iPSC-CM_expr_data_finalEgret_v1_banovich_06172020.RData")
ppi <- read.table("../../final_egret_v1/inputs/ppi.txt", header = FALSE, sep = "\t")
qtl <- read.table("../inputs/iPSCCM_eQTL_in_motif_promotor_adjacent_egene_banovich_finalEGRET_v1_06172020.txt", header = FALSE)

# Parse PPI
nameGeneMap <- read.table("../../final_egret_v1/annotation/geneID_name_map.txt", header = FALSE)
colnames(nameGeneMap) <- c("gene","name")
expressedGeneNames <- nameGeneMap$name[which(nameGeneMap$gene %in% rownames(expr_qqnorm))]
ppiFiltered <- ppi[((ppi$V1 %in% expressedGeneNames) & (ppi$V2 %in% expressedGeneNames)),]

# QTL data
colnames(qtl) <- c("tf",	"gene", "snpPos",	"chr",	"effect")
qtl$snpID <- paste0(qtl$chr,"_",qtl$snpPos)

# qbic data for QTLs
colnames(qbic) <- c("snpID",	"tf",	"gene",	"qbicEffectSize","qbicEffect")
maxabs <- function(x){
  location <- which(abs(x) == max(abs(x)))
  return(x[location])
}
qbic_uniq <- distinct(qbic)
qbic_uniq$catid <- paste0(qbic_uniq$snpID,qbic_uniq$tf,qbic_uniq$gene,qbic_uniq$qbicEffectSize)
qbic_ag <- aggregate(qbic_uniq$qbicEffectSize, by = list(qbic_uniq$snpID,qbic_uniq$tf,qbic_uniq$gene), FUN = maxabs)
colnames(qbic_ag) <- c("snpID","tf","gene","qbicEffectSize")
qbic_ag$catid <- paste0(qbic_ag$snpID,qbic_ag$tf,qbic_ag$gene,qbic_ag$qbicEffectSize)
qbic_ag$qbicEffect <- qbic_uniq$qbicEffect[match(qbic_ag$catid,qbic_uniq$catid)]
qbic_ag$absQbicEffectSize <- abs(qbic_ag$qbicEffectSize)

# Calculating alt allele count for each qbic SNP.
colnames(vcf) <- c("CHROM",  "POS"  ,   "ID"  ,    "REF"  ,   "ALT"   ,  "QUAL"   , "FILTER" , "INFO"   , "FORMAT", "GENO")
snp_ids <- paste0(vcf$CHROM,"_",vcf$POS)
rownames(vcf) <- snp_ids
vcf$snp_id <- snp_ids
qbic_ag$alt_allele_count <- vcf$GENO[match(qbic_ag$snpID, vcf$snp_id)]
qtl$alt_allele_count <- vcf$GENO[match(qtl$snpID, vcf$snp_id)]
QTL_tf_gene_pairs <- distinct(qtl[,c(1:7)])
QTL_tf_gene_pairs$edgeE <- rep(1,nrow(QTL_tf_gene_pairs))
QTL_tf_gene_pairs$alt_allele_count[is.na(QTL_tf_gene_pairs$alt_allele_count)] <- 0
QTL_tf_gene_pairs$qtlTF <- paste0(QTL_tf_gene_pairs$tf,QTL_tf_gene_pairs$snpID)

# Construct modifiers
qbic_ag$snpTF <- paste0(qbic_ag$tf,qbic_ag$snpID)
QTL_tf_gene_pairs$qbicEffectSize <- qbic_ag$qbicEffectSize[match(QTL_tf_gene_pairs$qtlTF, qbic_ag$snpTF)]
QTL_tf_gene_pairs$qbicEffect <- qbic_ag$qbicEffect[match(QTL_tf_gene_pairs$qtlTF, qbic_ag$snpTF)]
QTL_tf_gene_pairs$absQbicEffectSize <- qbic_ag$absQbicEffectSize[match(QTL_tf_gene_pairs$qtlTF, qbic_ag$snpTF)]
QTL_tf_gene_pairs[is.na(QTL_tf_gene_pairs)] <- 0
QTL_tf_gene_pairs$absQtlQffect_altAlleleCount_qbicEffect <- abs(QTL_tf_gene_pairs$effect) * QTL_tf_gene_pairs$alt_allele_count * QTL_tf_gene_pairs$qbicEffect
QTL_tf_gene_pairs$edgeID <- paste0(QTL_tf_gene_pairs$tf,QTL_tf_gene_pairs$gene)
mods <- unique(QTL_tf_gene_pairs[,c(1,2)])
mods$edgeID <- paste0(mods$tf,mods$gene)
absQtlQffect_altAlleleCount_qbicEffect <- aggregate(absQtlQffect_altAlleleCount_qbicEffect ~ edgeID, data=QTL_tf_gene_pairs, FUN=sum)
mods$absQtlQffect_altAlleleCount_qbicEffect <- absQtlQffect_altAlleleCount_qbicEffect$absQtlQffect_altAlleleCount_qbicEffect[match(mods$edgeID, absQtlQffect_altAlleleCount_qbicEffect$edgeID)]

# Construct priors
combined <- merge(as.data.frame(panda_prior),mods, all.x=TRUE, by.x = c(1,2),by.y = c(1,2))
combined[is.na(combined)] <- 0
combined$egretPrior <- combined$edgeP - combined$absQtlQffect_altAlleleCount_qbicEffect
egretPrior <- combined[,c(1,2,6)]

# Run message passing
if (args[1] == 1){
  processes <- c(1,2)
  prior_list <- list(panda_prior, egretPrior)
  prior_names <- c("panda","egret")
  mclapply(processes, function(p) {
    system.time(results <- panda(as.data.frame(prior_list[p]), expr=expr_qqnorm, ppi=ppiFiltered, progress=TRUE, remove.missing.ppi = TRUE, remove.missing.motif = TRUE, remove.missing.genes = TRUE))
    filename <- paste0("../outputs/",tag,"_",prior_names[p],".RData")
    regnet <- results@regNet
    save(regnet, file = filename)
  }, mc.cores = 2, mc.preschedule=TRUE)
} else {
    system.time(results <- panda(as.data.frame(egretPrior), expr=expr_qqnorm, ppi=ppiFiltered, progress=TRUE, remove.missing.ppi = TRUE, remove.missing.motif = TRUE, remove.missing.genes = TRUE))
    filename <- paste0("../outputs/",tag,"_egret.RData")
    regnet <- results@regNet
    save(regnet, file = filename)
}
